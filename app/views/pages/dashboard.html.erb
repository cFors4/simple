<div class="<%= @page_class %>">
  <h1>MinMax Dashboard</h1>
  
  <nav class="dashboard-tabs">
    <button id="prevTab" class="nav-arrow">&larr;</button>
    <ul>
      <li data-tab="flow" class="active">Flow</li>
      <li data-tab="build">Build</li>
      <li data-tab="become">Become</li>
      <li data-tab="be">Be</li>
    </ul>
    <button id="nextTab" class="nav-arrow">&rarr;</button>
  </nav>

  <div class="dashboard-content">
    <div id="flow" class="tab-content active">
      <%= render partial: 'pages/dashboard_flow' %>
      <div class="flow-visualization">
        <h3>Flow Visualization</h3>
        <div id="flowChart"></div>
      </div>
    </div>
    <div id="build" class="tab-content">
      <%= render partial: 'pages/dashboard_build' %>
    </div>
    <div id="become" class="tab-content">
      <%= render partial: 'pages/dashboard_become' %>
    </div>
    <div id="be" class="tab-content">
      <%= render partial: 'pages/dashboard_be' %>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const tabs = document.querySelectorAll('.dashboard-tabs li');
    const tabContents = document.querySelectorAll('.tab-content');
    const prevButton = document.getElementById('prevTab');
    const nextButton = document.getElementById('nextTab');
    let currentTabIndex = 0;

    function updateActiveTab() {
      tabs.forEach((tab, index) => {
        if (index === currentTabIndex) {
          tab.classList.add('active');
          tabContents[index].classList.add('active');
        } else {
          tab.classList.remove('active');
          tabContents[index].classList.remove('active');
        }
      });
    }

    prevButton.addEventListener('click', function() {
      currentTabIndex = (currentTabIndex - 1 + tabs.length) % tabs.length;
      updateActiveTab();
    });

    nextButton.addEventListener('click', function() {
      currentTabIndex = (currentTabIndex + 1) % tabs.length;
      updateActiveTab();
    });

    tabs.forEach((tab, index) => {
      tab.addEventListener('click', function() {
        currentTabIndex = index;
        updateActiveTab();
      });
    });

    // Flow chart
    const ctx = document.getElementById('flowChart').getContext('2d');
    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: ['Work', 'Personal', 'Health', 'Other'],
        datasets: [{
          label: 'Number of Flows',
          data: [0, 0, 0, 0],
          backgroundColor: [
            'rgba(255, 99, 132, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(153, 102, 255, 0.2)'
          ],
          borderColor: [
            'rgba(255, 99, 132, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)'
          ],
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });

    // Form handling
    const addFlowButton = document.querySelector('.add-flow-button');
    const flowForm = document.querySelector('.flow-form');
    const closeFormButton = document.querySelector('.close-form');

    function showForm() {
      flowForm.classList.add('show');
      document.body.insertAdjacentHTML('beforeend', '<div class="flow-form-overlay"></div>');
      setTimeout(() => {
        document.querySelector('.flow-form-overlay').classList.add('show');
      }, 10);
      document.addEventListener('click', handleOutsideClick);
    }

    function hideForm() {
      flowForm.classList.remove('show');
      const overlay = document.querySelector('.flow-form-overlay');
      if (overlay) {
        overlay.classList.remove('show');
        setTimeout(() => {
          overlay.remove();
        }, 300);
      }
      document.removeEventListener('click', handleOutsideClick);
    }

    function handleOutsideClick(event) {
      if (!flowForm.contains(event.target) && !addFlowButton.contains(event.target)) {
        hideForm();
      }
    }

    addFlowButton.addEventListener('click', function(event) {
      event.stopPropagation();
      showForm();
    });

    closeFormButton.addEventListener('click', hideForm);

    flowForm.addEventListener('click', function(event) {
      event.stopPropagation();
    });
  });
</script>

<style>
  .dashboard-tabs {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 20px;
  }

  .dashboard-tabs ul {
    display: flex;
    list-style-type: none;
    padding: 0;
    margin: 0;
  }

  .dashboard-tabs li {
    margin: 0 10px;
    padding: 10px;
    cursor: pointer;
    border-bottom: 2px solid transparent;
  }

  .dashboard-tabs li.active {
    border-bottom-color: #007bff;
  }

  .nav-arrow {
    background: none;
    border: none;
    font-size: 24px;
    cursor: pointer;
    padding: 0 10px;
  }

  .tab-content {
    display: none;
  }

  .tab-content.active {
    display: block;
  }

  .flow-visualization {
    margin-top: 30px;
  }

  #flowChart {
    max-width: 600px;
    margin: 0 auto;
  }

  .flow-form {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: white;
    padding: 20px;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
    box-shadow: 0 -2px 10px rgba(0,0,0,0.1);
    max-height: 60vh;
    overflow-y: auto;
    z-index: 1000;
    transform: translateY(100%);
    transition: transform 0.3s ease-out;
  }

  .flow-form.show {
    transform: translateY(0);
  }

  .flow-form-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0,0,0,0.5);
    z-index: 999;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease-out, visibility 0.3s ease-out;
  }

  .flow-form-overlay.show {
    opacity: 1;
    visibility: visible;
  }
</style>
