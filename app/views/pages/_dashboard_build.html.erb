<%= render 'shared/side_menu' %>
<h2>Build Dashboard - "Build your self, build your skills, build your systems"</h2>


<div id="graph" class="dashboard-section graph">
  <h3>Graph of Inputs</h3>
  <p>Fractal systems as starting as 4 primary partions. A system has stocks, flows, metrics and goals. Inputs, Function, output and feedback.</p>
  <div class="overarching-build-goal">
    <h4>Build Goal - What do you aim to construct or improve?</h4>
    <textarea id="buildGoal" placeholder="Enter your build goal here" rows="3" style="resize: none;"></textarea>
    <div class="button-spacer"></div>
    <button onclick="saveBuildGoal()">Save Goal</button>
    <p id="currentBuildGoal"></p>
  </div>
  <div class="overall-percentage">Build Progress: <span id="buildOverallPercentage">0</span>%</div>

<div class="diamond-container build-diamond">
  <%= link_to homo_memetic_techno_capital_path, class: "diamond-square", data: { build_area: "homo-memetic-techno-capital" } do %>
    <span class="square-title">Homo-Memetic-Techno-Capital</span>
    <span class="square-percentage">0%</span>
  <% end %>
  <%= link_to skillful_path, class: "diamond-square", data: { build_area: "skillful" } do %>
    <span class="square-title">Skillful</span>
    <span class="square-percentage">0%</span>
  <% end %>
  <%= link_to purpose_programming_path, class: "diamond-square", data: { build_area: "purpose-programming" } do %>
    <span class="square-title">Purpose/Programming</span>
    <span class="square-percentage">0%</span>
  <% end %>
  <%= link_to individual_configurability_path, class: "diamond-square", data: { build_area: "individual-configurability" } do %>
    <span class="square-title">Individual Configurability</span>
    <span class="square-percentage">0%</span>
  <% end %>
</div>

</div>

<div id="practice" class="dashboard-section practice">
  <h3>Practice</h3>
  <p>Problem solve, iterate, experiment and build better systems. 12 Leverage points and 5 step process.</p>
  <div class="build-intro">
  <div class="collapsible-section">
    <h3 class="collapsible-header">Theory of Constraints: 5-Step Process <span class="toggle-icon">+</span></h3>
    <div class="collapsible-content hidden">
      <ol>
        <li>Identify the constraint</li>
        <li>Exploit the constraint</li>
        <li>Subordinate everything else to the constraint</li>
        <li>Elevate the constraint</li>
        <li>Repeat the process</li>
      </ol>
    </div>
  </div>

  <div class="collapsible-section">
    <h3 class="collapsible-header">Donella Meadows' 12 Leverage Points in Systems Thinking <span class="toggle-icon">+</span></h3>
    <div class="collapsible-content hidden">
      <ol>
        <li>The power to transcend paradigms</li>
        <li>The mindset or paradigm out of which the system arises</li>
        <li>The goals of the system</li>
        <li>The power to add, change, evolve, or self-organize system structure</li>
        <li>The rules of the system</li>
        <li>The structure of information flows</li>
        <li>The gain around driving positive feedback loops</li>
        <li>The strength of negative feedback loops</li>
        <li>The length of delays in the system</li>
        <li>The structure of material stocks and flows</li>
        <li>The size of buffers and other stabilizing stocks</li>
        <li>Constants, parameters, numbers</li>
      </ol>
    </div>
  </div>
</div>
</div>

<div id="analogy" class="dashboard-section analogy">
  <h3>Analogy</h3>
  <p>An optimisation of multiple stocks and flows to be looked at holistically for one to many goals. This is a landscape of global optimisations.</p>
</div>

<div id="equation" class="dashboard-section equation">
  <h3>Equation of Mastery</h3>
  <p>Mastery of Systems (I Know with Clarity) = (Maximise Productivity + Minimise Bottlenecks) + (Process of Iterating * Inner Integrity * Outer Solving)^Responsibility</p>
</div>

<div id="model" class="dashboard-section model">
  <h3>Model</h3>
  <p>A System of systems, fractal in nature, inputs,  feedback, outputs, state, skills, and goals.</p>
  <%= image_tag 'buildModel.png', alt: 'Build Model', class: 'model-image' %>
</div>

<div id="metrics" class="dashboard-section metrics">
  <h3>Throughput Metrics for Build</h3>
  <ul>
    <li>Throughput or Impactful Activity: %</li>
    <li>Operational Expense or Energised Tranquility: %</li>
    <li>Investment or Profound Experience: %</li>
  </ul>
</div>

<style>
  .build-intro {
    margin-bottom: 2rem;
  }

  .collapsible-section {
    background-color: #2c2c2c;
    border-radius: 8px;
    margin-bottom: 1rem;
    box-shadow: 0 2px 4px rgba(255,255,255,0.1);
  }

  .collapsible-header {
    padding: 1rem;
    margin: 0;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .collapsible-content {
    overflow: hidden;
    transition: max-height 0.3s ease-out, padding 0.3s ease-out;
    max-height: 0;
    padding: 0 1rem;
  }

  .collapsible-content.active {
    max-height: 1000px; /* Adjust this value based on your content */
    padding: 1rem;
  }

  .toggle-icon {
    transition: transform 0.3s ease-out;
  }

  .toggle-icon.open {
    transform: rotate(45deg);
  }

  .build-diamond {
    width: 300px;
    height: 300px;
  }

  .build-diamond .diamond-square {
    width: 140px;
    height: 140px;
    text-decoration: none;
    color: inherit;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    cursor: pointer;
  }

  .build-details {
    margin-top: 2rem;
  }

  .build-details ul {
    list-style-type: none;
    padding-left: 0;
  }

  .build-details li {
    margin-bottom: 0.5rem;
  }

  .dashboard-section {
    background-color: #2c2c2c;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 20px;
    color: #ffffff;
  }

  .dashboard-section h3 {
    margin-top: 0;
    margin-bottom: 10px;
  }

  .diamond-square span {
    font-size: 0.8rem;
  }

  .overarching-build-goal {
    background-color: #2c2c2c;
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 20px;
    max-width: 100%; // Changed from 800px
  }
  .overarching-build-goal textarea {
    width: 100%;
    max-width: 100%; // Changed from 800px
    padding: 10px;
    margin-bottom: 10px;
    border-radius: 4px;
    border: 1px solid #444;
    background-color: #1e1e1e;
    color: #ffffff;
    resize: vertical;
  }
  .overarching-build-goal {
    max-width: 100%; // Changed from 800px
    margin: 0 auto;
  }
  .overarching-build-goal button {
    background-color: #64b5f6;
    color: #000000;
    border: none;
    padding: 10px 15px;
    border-radius: 4px;
    cursor: pointer;
    width: 100px;
  }
  .overarching-build-goal button:hover {
    background-color: #90caf9;
  }
  .overarching-build-goal p {
    margin-top: 10px;
    margin-bottom: 0;
  }
  .button-spacer {
    height: 10px;
  }
</style>

<script>
function initCollapsible() {
  const collapsibleHeaders = document.querySelectorAll('.collapsible-header');
  collapsibleHeaders.forEach(header => {
    header.addEventListener('click', function() {
      const content = this.nextElementSibling;
      const toggleIcon = this.querySelector('.toggle-icon');
      
      content.classList.toggle('active');
      toggleIcon.classList.toggle('open');
      toggleIcon.textContent = content.classList.contains('active') ? '-' : '+';
      
      console.log('Clicked header:', this.textContent);
      console.log('Content active:', content.classList.contains('active'));
    });
  });

  console.log('Number of collapsible headers:', collapsibleHeaders.length);
}

// Call initCollapsible when the DOM is loaded
document.addEventListener('DOMContentLoaded', initCollapsible);

// If using Turbolinks, also add this:
document.addEventListener('turbolinks:load', initCollapsible);

// Existing JavaScript for updateBuildPercentages, etc.
document.addEventListener('DOMContentLoaded', function() {
  function updateBuildPercentages() {
    const buildOverallPercentage = document.getElementById('buildOverallPercentage');
    const squarePercentages = document.querySelectorAll('.build-diamond .square-percentage');
    
    let total = 0;
    squarePercentages.forEach(span => {
      const percentage = Math.floor(Math.random() * 101);
      span.textContent = `${percentage}%`;
      total += percentage;
    });
    
    const average = Math.round(total / squarePercentages.length);
    buildOverallPercentage.textContent = average;
  }

  // Update percentages on page load (for demonstration)
  updateBuildPercentages();

  // Graph initialization
  const ctx = document.getElementById('buildGraph').getContext('2d');
  new Chart(ctx, {
    type: 'line',
    data: {
      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
      datasets: [{
        label: 'Build Progress',
        data: [0, 10, 20, 30, 40, 50],
        borderColor: 'rgb(255, 206, 86)',
        tension: 0.1
      }]
    },
    options: {
      responsive: true,
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });

  // Build Goal functionality
  const buildGoalInput = document.getElementById('buildGoal');
  const currentBuildGoal = document.getElementById('currentBuildGoal');
  const saveGoalButton = document.querySelector('.overarching-build-goal button');

  function saveBuildGoal() {
    const goal = buildGoalInput.value;
    if (goal) {
      currentBuildGoal.textContent = `Current Goal: ${goal}`;
      localStorage.setItem('buildGoal', goal);
    }
  }

  // Load saved goal on page load
  const savedGoal = localStorage.getItem('buildGoal');
  if (savedGoal) {
    currentBuildGoal.textContent = `Current Goal: ${savedGoal}`;
  }

  saveGoalButton.addEventListener('click', saveBuildGoal);
});
</script>
